@{
    var lastDay = new DateTime(DateTime.Now.Year, DateTime.Now.Month, DateTime.DaysInMonth(DateTime.Now.Year, DateTime.Now.Month));
    ViewBag.LastDay = (int)lastDay.Day + 3;
    ViewBag.LastColForExel = (int)lastDay.Day + 4;
}


<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ISTEM MOBILE SYSTEM</title>

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>ISTEM</title>


    <!--
    <link rel="shortcut icon" type="image/png" href="~/Content/images/logos/ISTEM_512x512.png">
    <link rel="shortcut icon" type="image/png" href="~/Content/images/logos/ISTEM_ICON_ONLY2.svg" />

    <link rel="icon" type="image/png" sizes="16x16" href="~/Content/images/logos/ISTEM_16x16.png">
    <link rel="icon" type="image/png" sizes="32x32" href="~/Content/images/logos/ISTEM_32x32.png">
    <link rel="icon" type="image/png" sizes="192x192" href="~/Content/images/logos/ISTEM_192x192.png">
    <link rel="icon" type="image/png" sizes="196x196" href="~/Content/images/logos/ISTEM_196x196.png">
    <link rel="icon" type="image/png" sizes="512x512" href="~/Content/images/logos/ISTEM_512x512.png">
    -->
    <!--  for safari browser (apple stuff) -->
    <!--
    <link rel="apple-touch-icon" sizes="57x57" href="~/Content/images/logos/ISTEM_57x57.png">
    <link rel="apple-touch-icon" sizes="114x114" href="~/Content/images/logos/ISTEM_114x114.png">
    <link rel="apple-touch-icon" sizes="72x72" href="~/Content/images/logos/ISTEM_72x72.png">
    <link rel="apple-touch-icon" sizes="144x144" href="~/Content/images/logos/ISTEM_144x144.png">
    <link rel="apple-touch-icon" sizes="60x60" href="~/Content/images/logos/ISTEM_60x60.png">
    <link rel="apple-touch-icon" sizes="120x120" href="~/Content/images/logos/ISTEM_120x120.png">
    <link rel="apple-touch-icon" sizes="76x76" href="~/Content/images/logos/ISTEM_76x76.png">
    <link rel="apple-touch-icon" sizes="152x152" href="~/Content/images/logos/ISTEM_152x152.png">
    -->

    <link rel="shortcut icon" type="image/png" href="~ISTEM_512x512.png">
    <link rel="shortcut icon" type="image/png" href="~/ISTEM_ICON_ONLY2.svg" />

    <link rel="icon" type="image/png" sizes="16x16" href="~/ISTEM_16x16.png">
    <link rel="icon" type="image/png" sizes="32x32" href="~/ISTEM_32x32.png">
    <link rel="icon" type="image/png" sizes="192x192" href="~/ISTEM_192x192.png">
    <link rel="icon" type="image/png" sizes="196x196" href="~/ISTEM_196x196.png">
    <link rel="icon" type="image/png" sizes="512x512" href="~/ISTEM_512x512.png">

    <!--  for safari browser (apple stuff) -->
    <link rel="apple-touch-icon" sizes="57x57" href="~/ISTEM_57x57.png">
    <link rel="apple-touch-icon" sizes="114x114" href="~/ISTEM_114x114.png">
    <link rel="apple-touch-icon" sizes="72x72" href="~/ISTEM_72x72.png">
    <link rel="apple-touch-icon" sizes="144x144" href="~/ISTEM_144x144.png">
    <link rel="apple-touch-icon" sizes="60x60" href="~/ISTEM_60x60.png">
    <link rel="apple-touch-icon" sizes="120x120" href="~/ISTEM_120x120.png">
    <link rel="apple-touch-icon" sizes="76x76" href="~/ISTEM_76x76.png">

    <link rel="manifest" href="/manifest.json">
    <link rel="stylesheet" href="~/Content/css/styles.min.css" />

    <link href="~/Content/libs/DataTables/css/dataTables.bootstrap5.css" rel="stylesheet">
    <link href="~/Content/libs/DataTables/css/fixedColumns.bootstrap5.css" rel="stylesheet">
    <link href="~/Content/libs/DataTables/css/buttons.bootstrap5.css" rel="stylesheet">
</head>
<body>

    <!--  Body Wrapper -->
    <div class="page-wrapper" id="main-wrapper" data-layout="vertical" data-navbarbg="skin6" data-sidebartype="full"
         data-sidebar-position="fixed" data-header-position="fixed">
        <!-- Sidebar Start -->
        <aside class="left-sidebar">
            <!-- Sidebar scroll-->
            <div>
                <div class="brand-logo d-flex align-items-center justify-content-between">
                    <a href="@Url.Action("Index", "Home")" class="text-nowrap logo-img">
                        <img src="~/Content/images/logos/toray_only_logo.svg" width="180" alt="" />
                    </a>
                    <div class="close-btn d-xl-none d-block sidebartoggler cursor-pointer" id="sidebarCollapse">
                        <i class="ti ti-x fs-8"></i>
                    </div>
                </div>
                <!-- Sidebar navigation-->
                <nav class="sidebar-nav scroll-sidebar" data-simplebar="init">
                    <ul id="sidebarnav">
                        <li class="nav-small-cap">
                            <i class="ti ti-dots nav-small-cap-icon fs-4"></i>
                            <span class="hide-menu">Home</span>
                        </li>
                        <li class="sidebar-item">
                            <a class="sidebar-link" href="@Url.Action("Index", "Home")" aria-expanded="false">
                                <span>
                                    <i class="ti ti-layout-dashboard"></i>
                                </span>
                                <span class="hide-menu">Dashboard</span>
                            </a>
                        </li>

                        <!--
                         <li class="nav-small-cap">
                            <i class="ti ti-dots nav-small-cap-icon fs-4"></i>
                            <span class="hide-menu">Section</span>
                        </li>
                             -->
                        @if (ViewBag.UserRoles == "Admin" || ViewBag.UserRoles == "Spinning" || ViewBag.UserRoles == "Management")
                        {
                            <!--
                            <li class="sidebar-item">
                                <a class="sidebar-link" href="@Url.Action("Index", "Spinning")" aria-expanded="false">
                                    <span>
                                        @*<i class="ti ti-article"></i>*@
                                        <img src="~/Content/images/logos/Spinning.png" class="ti" />
                                    </span>
                                    <span class="hide-menu">Spinning</span>
                                </a>
                            </li>
                                 -->
                        }
                        @if (ViewBag.UserRoles == "Admin" || ViewBag.UserRoles == "Weaving" || ViewBag.UserRoles == "Management")
                        {
                            <!--
                            <li class="sidebar-item">
                                <a class="sidebar-link" href="@Url.Action("Index", "Weaving")" aria-expanded="false">
                                    <span>
                                        @*<i class="ti ti-alert-circle"></i>*@
                                        <img src="~/Content/images/logos/Weaving.png" class="ti" />
                                    </span>
                                    <span class="hide-menu">Weaving</span>
                                </a>
                            </li>
                                 -->
                        }

                        @if (ViewBag.UserRoles == "Admin" || ViewBag.UserRoles == "Dyeing" || ViewBag.UserRoles == "Management")
                        {
                            <!--
                            <li class="sidebar-item">
                                <a class="sidebar-link" href="@Url.Action("Index", "Dyeing")" aria-expanded="false">
                                    <span>
                                        @*<i class="ti ti-cards"></i>*@
                                        <img src="~/Content/images/logos/Dyeing.png" class="ti" />
                                    </span>
                                    <span class="hide-menu">Dyeing</span>
                                </a>
                            </li>
                                 -->
                        }



                        <li class="nav-small-cap">
                            <i class="ti ti-dots nav-small-cap-icon fs-4"></i>
                            <span class="hide-menu">User</span>
                        </li>
                        <li class="sidebar-item">
                            @Html.Partial("_LoginPartial")
                        </li>
                    </ul>
                </nav>
                <!-- End Sidebar navigation -->
            </div>
            <!-- End Sidebar scroll-->
        </aside>
        <!--  Sidebar End -->
        <!--  Main wrapper -->
        <div class="body-wrapper">
            <!--  Header Start -->
            <header class="app-header bg-opa">
                <nav class="navbar navbar-expand-lg navbar-light">
                    <ul class="navbar-nav">
                        <li class="nav-item d-block d-xl-none">
                            <a class="nav-link sidebartoggler nav-icon-hover" id="headerCollapse" href="javascript:void(0)">
                                <i class="ti ti-menu-2"></i>
                            </a>
                        </li>
                    </ul>
                    <div class="navbar-collapse justify-content-end px-0" id="navbarNav">
                        <ul class="navbar-nav flex-row ms-auto align-items-center justify-content-end">
                            <li class="nav-item dropdown">
                                <a class="nav-link nav-icon-hover" href="javascript:void(0)" id="drop2" data-bs-toggle="dropdown"
                                   aria-expanded="false">
                                    <img src="~/Content/images/logos/ISTEM site_with_ text.svg" width="130" alt="" />
                                </a>
                            </li>
                        </ul>
                    </div>
                </nav>
            </header>
            <!--  Header End -->
            <div class="container-fluid">
                <br>
                @RenderBody()
            </div>
        </div>
    </div>

    <script src="~/Content/libs/jquery/dist/jquery.min.js"></script>
    <script src="~/Content/libs/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/Content/js/sidebarmenu.js"></script>
    <script src="~/Content/js/app.min.js"></script>
    <script src="~/Content/libs/simplebar/dist/simplebar.js"></script>

    <!--  For DataTable Javascript -->
    <script src="~/Content/libs/DataTables/js/jquery-3.7.1.js"></script>
    <script src="~/Content/libs/DataTables/js/dataTables.js"></script>
    <script src="~/Content/libs/DataTables/js/dataTables.bootstrap5.js"></script>
    <script src="~/Content/libs/DataTables/js/dataTables.fixedColumns.js"></script>
    <script src="~/Content/libs/DataTables/js/fixedColumns.bootstrap5.js"></script>

    <script src="~/Content/libs/DataTables/js/dataTables.buttons.js"></script>
    <script src="~/Content/libs/DataTables/js/buttons.bootstrap5.js"></script>
    <script src="~/Content/libs/DataTables/js/jszip.min.js"></script>
    <script src="~/Content/libs/DataTables/js/pdfmake.min.js"></script>
    <script src="~/Content/libs/DataTables/js/vfs_fonts.js"></script>
    <script src="~/Content/libs/DataTables/js/buttons.html5.min.js"></script>
    <script src="~/Content/libs/DataTables/js/buttons.print.min.js"></script>
    <!--  For DataTable Javascript -->

    <script type="text/javascript">
        var table = $('#RM-WH-PLAN').DataTable({
            footerCallback: function (row, data, start, end, display) {
                var _lastday = '@ViewBag.LastDay'              
                var loop = [];
                var api = this.api();

                var intVal = function (i) {
                    return typeof i === 'string' ?
                        i.replace(/[\$,]/g, '') * 1 :
                        typeof i === 'number' ?
                        i : 0;
                };

                for (var i = 3; i <= _lastday; i++) {
                    loop[i] = api
                            .column(i)
                            .data()
                            .reduce(function (a, b) {
                                return intVal(a) + intVal(b);
                            }, 0);
                }

                for (var i = 3; i <= _lastday; i++) {
                    $(api.column(i).footer()).html(loop[i]);
                }
            },
            //scrollCollapse: true,

            layout: {
                topStart: 'buttons'
            },
            dom: "B",
            buttons: [
                {
                    extend: 'excel',
                    footer: true,
                    title: 'RM-WH-PLAN',
                    text: 'Download',
                    className: "btn bg-primary-subtle text-primary fs-3",
                    customize: function (xlsx) {
                        var sheet = xlsx.xl.worksheets['sheet1.xml'];
                        var _lastcolumnindex = '@ViewBag.LastColForExel';
                        var formula_last_col = "";                        
                        var dividend = _lastcolumnindex;
                        var columnName = "";
                        var modulo;

                        while (dividend > 0) {
                            modulo = (dividend - 1) % 26;
                            columnName = String.fromCharCode(65 + modulo).toString() + columnName;
                            dividend = parseInt((dividend - modulo) / 26);
                        };

                        formula_last_col = 'row c[r^=' + columnName + ']';
                        $(formula_last_col, sheet).each(function () {
                            $(this).attr('s', '2'); 
                        });
                        $('row:first c', sheet).attr('s', '50');//'50' is for left-aligned text and 52 for -right , 51 - center
                        $('row:first c', sheet).attr('s', '2')
                        $('row:last c', sheet).attr('s', '2');
                        $('row:nth-child(2) c', sheet).attr('s', '2'); // '2' is for bold text
                    }
                }],
            initComplete: function () {
                $('table.dataTable').hide();
            },


        });

        var table = $('#RM-CONSUME-PLAN').DataTable({
            footerCallback: function (row, data, start, end, display) {
                var _lastday = '@ViewBag.LastDay'
                var loop = [];
                var api = this.api();

                var intVal = function (i) {
                    return typeof i === 'string' ?
                        i.replace(/[\$,]/g, '') * 1 :
                        typeof i === 'number' ?
                        i : 0;
                };

                for (var i = 3; i <= _lastday; i++) {
                    loop[i] = api
                            .column(i)
                            .data()
                            .reduce(function (a, b) {
                                return intVal(a) + intVal(b);
                            }, 0);
                }

                for (var i = 3; i <= _lastday; i++) {
                    $(api.column(i).footer()).html(loop[i]);
                }
            },
            layout: {
                topStart: 'buttons'
            },
            dom: "B",
            buttons: [
                {
                    extend: 'excel',
                    footer: true,
                    title: 'RM-CONSUME-PLAN',
                    text: 'Download',
                    className: "btn bg-primary-subtle text-primary fs-3",
                    customize: function (xlsx) {
                        var sheet = xlsx.xl.worksheets['sheet1.xml'];
                        var _lastcolumnindex = '@ViewBag.LastColForExel';
                        var formula_last_col = "";
                        var dividend = _lastcolumnindex;
                        var columnName = "";
                        var modulo;

                        while (dividend > 0) {
                            modulo = (dividend - 1) % 26;
                            columnName = String.fromCharCode(65 + modulo).toString() + columnName;
                            dividend = parseInt((dividend - modulo) / 26);
                        };

                        formula_last_col = 'row c[r^=' + columnName + ']';
                        $(formula_last_col, sheet).each(function () {
                            $(this).attr('s', '2');
                        });
                        $('row:first c', sheet).attr('s', '50');//'50' is for left-aligned text and 52 for -right , 51 - center
                        $('row:first c', sheet).attr('s', '2')
                        $('row:last c', sheet).attr('s', '2');
                        $('row:nth-child(2) c', sheet).attr('s', '2'); // '2' is for bold text
                    }
                }],
            initComplete: function () {
                $('table.dataTable').hide();
            }
        });

        var table = $('#SP-WH-PLAN').DataTable({
            footerCallback: function (row, data, start, end, display) {
                var _lastday = '@ViewBag.LastDay'
                var loop = [];
                var api = this.api();

                var intVal = function (i) {
                    return typeof i === 'string' ?
                        i.replace(/[\$,]/g, '') * 1 :
                        typeof i === 'number' ?
                        i : 0;
                };

                for (var i = 3; i <= _lastday; i++) {
                    loop[i] = api
                            .column(i)
                            .data()
                            .reduce(function (a, b) {
                                return intVal(a) + intVal(b);
                            }, 0);
                }

                for (var i = 3; i <= _lastday; i++) {
                    $(api.column(i).footer()).html(loop[i]);
                }
            },
            layout: {
                topStart: 'buttons'
            },
            dom: "B",
            buttons: [
                {
                    extend: 'excel', title: 'SP-WH-PLAN', text: 'Download', className: "btn bg-danger-subtle text-danger fs-3",
                    customize: function (xlsx) {
                        var sheet = xlsx.xl.worksheets['sheet1.xml'];
                        var _lastcolumnindex = '@ViewBag.LastColForExel';
                        var formula_last_col = "";
                        var dividend = _lastcolumnindex;
                        var columnName = "";
                        var modulo;

                        while (dividend > 0) {
                            modulo = (dividend - 1) % 26;
                            columnName = String.fromCharCode(65 + modulo).toString() + columnName;
                            dividend = parseInt((dividend - modulo) / 26);
                        };

                        formula_last_col = 'row c[r^=' + columnName + ']';
                        $(formula_last_col, sheet).each(function () {
                            $(this).attr('s', '2');
                        });
                        $('row:first c', sheet).attr('s', '50');//'50' is for left-aligned text and 52 for -right , 51 - center
                        $('row:first c', sheet).attr('s', '2')
                        $('row:last c', sheet).attr('s', '2');
                        $('row:nth-child(2) c', sheet).attr('s', '2'); // '2' is for bold text
                    }
                }],
            initComplete: function () {
                $('table.dataTable').hide();
            }
        });

        var table = $('#SP-CONSUME-PLAN').DataTable({
            footerCallback: function (row, data, start, end, display) {
                var _lastday = '@ViewBag.LastDay'
                var loop = [];
                var api = this.api();

                var intVal = function (i) {
                    return typeof i === 'string' ?
                        i.replace(/[\$,]/g, '') * 1 :
                        typeof i === 'number' ?
                        i : 0;
                };

                for (var i = 3; i <= _lastday; i++) {
                    loop[i] = api
                            .column(i)
                            .data()
                            .reduce(function (a, b) {
                                return intVal(a) + intVal(b);
                            }, 0);
                }

                for (var i = 3; i <= _lastday; i++) {
                    $(api.column(i).footer()).html(loop[i]);
                }
            },
            layout: {
                topStart: 'buttons'
            },
            dom: "B",
            buttons: [
                {
                    extend: 'excel', title: 'SP-CONSUME-PLAN', text: 'Download', className: "btn bg-danger-subtle text-danger fs-3",
                    customize: function (xlsx) {
                        var sheet = xlsx.xl.worksheets['sheet1.xml'];
                        var _lastcolumnindex = '@ViewBag.LastColForExel';
                        var formula_last_col = "";
                        var dividend = _lastcolumnindex;
                        var columnName = "";
                        var modulo;

                        while (dividend > 0) {
                            modulo = (dividend - 1) % 26;
                            columnName = String.fromCharCode(65 + modulo).toString() + columnName;
                            dividend = parseInt((dividend - modulo) / 26);
                        };

                        formula_last_col = 'row c[r^=' + columnName + ']';
                        $(formula_last_col, sheet).each(function () {
                            $(this).attr('s', '2');
                        });
                        $('row:first c', sheet).attr('s', '50');//'50' is for left-aligned text and 52 for -right , 51 - center
                        $('row:first c', sheet).attr('s', '2')
                        $('row:last c', sheet).attr('s', '2');
                        $('row:nth-child(2) c', sheet).attr('s', '2'); // '2' is for bold text
                    }
                }],
            initComplete: function () {
                $('table.dataTable').hide();
            }
        });

        var table = $('#WV-GREY-PLAN').DataTable({
            footerCallback: function (row, data, start, end, display) {
                var _lastday = '@ViewBag.LastDay'
                var loop = [];
                var api = this.api();

                var intVal = function (i) {
                    return typeof i === 'string' ?
                        i.replace(/[\$,]/g, '') * 1 :
                        typeof i === 'number' ?
                        i : 0;
                };

                for (var i = 3; i <= _lastday; i++) {
                    loop[i] = api
                            .column(i)
                            .data()
                            .reduce(function (a, b) {
                                return intVal(a) + intVal(b);
                            }, 0);
                }

                for (var i = 3; i <= _lastday; i++) {
                    $(api.column(i).footer()).html(loop[i]);
                }
            },
            layout: {
                topStart: 'buttons'
            },
            dom: "B",
            buttons: [
                {
                    extend: 'excel', title: 'WV-GREY-PLAN', text: 'Download', className: "btn bg-success-subtle text-success fs-3",
                    customize: function (xlsx) {
                        var sheet = xlsx.xl.worksheets['sheet1.xml'];
                        var _lastcolumnindex = '@ViewBag.LastColForExel';
                        var formula_last_col = "";
                        var dividend = _lastcolumnindex;
                        var columnName = "";
                        var modulo;

                        while (dividend > 0) {
                            modulo = (dividend - 1) % 26;
                            columnName = String.fromCharCode(65 + modulo).toString() + columnName;
                            dividend = parseInt((dividend - modulo) / 26);
                        };

                        formula_last_col = 'row c[r^=' + columnName + ']';
                        $(formula_last_col, sheet).each(function () {
                            $(this).attr('s', '2');
                        });
                        $('row:first c', sheet).attr('s', '50');//'50' is for left-aligned text and 52 for -right , 51 - center
                        $('row:first c', sheet).attr('s', '2')
                        $('row:last c', sheet).attr('s', '2');
                        $('row:nth-child(2) c', sheet).attr('s', '2'); // '2' is for bold text
                    }
                }],
            initComplete: function () {
                $('table.dataTable').hide();
            }
        });

        var table = $('#WV-CONSUME-PLAN').DataTable({
            footerCallback: function (row, data, start, end, display) {
                var _lastday = '@ViewBag.LastDay'
                var loop = [];
                var api = this.api();

                var intVal = function (i) {
                    return typeof i === 'string' ?
                        i.replace(/[\$,]/g, '') * 1 :
                        typeof i === 'number' ?
                        i : 0;
                };

                for (var i = 3; i <= _lastday; i++) {
                    loop[i] = api
                            .column(i)
                            .data()
                            .reduce(function (a, b) {
                                return intVal(a) + intVal(b);
                            }, 0);
                }

                for (var i = 3; i <= _lastday; i++) {
                    $(api.column(i).footer()).html(loop[i]);
                }
            },
            layout: {
                topStart: 'buttons'
            },
            dom: "B",
            buttons: [
                {
                    extend: 'excel', title: 'DYEING-INPUT-PLAN', text: 'Download', className: "btn bg-success-subtle text-success fs-3",
                    customize: function (xlsx) {
                        var sheet = xlsx.xl.worksheets['sheet1.xml'];
                        var _lastcolumnindex = '@ViewBag.LastColForExel';
                        var formula_last_col = "";
                        var dividend = _lastcolumnindex;
                        var columnName = "";
                        var modulo;

                        while (dividend > 0) {
                            modulo = (dividend - 1) % 26;
                            columnName = String.fromCharCode(65 + modulo).toString() + columnName;
                            dividend = parseInt((dividend - modulo) / 26);
                        };

                        formula_last_col = 'row c[r^=' + columnName + ']';
                        $(formula_last_col, sheet).each(function () {
                            $(this).attr('s', '2');
                        });
                        $('row:first c', sheet).attr('s', '50');//'50' is for left-aligned text and 52 for -right , 51 - center
                        $('row:first c', sheet).attr('s', '2')
                        $('row:last c', sheet).attr('s', '2');
                        $('row:nth-child(2) c', sheet).attr('s', '2'); // '2' is for bold text
                    }
                }],
            initComplete: function () {
                $('table.dataTable').hide();
            }
        });

        var table = $('#DY-FG-PLAN').DataTable({
            footerCallback: function (row, data, start, end, display) {
                var _lastday = '@ViewBag.LastDay'
                var loop = [];
                var api = this.api();

                var intVal = function (i) {
                    return typeof i === 'string' ?
                        i.replace(/[\$,]/g, '') * 1 :
                        typeof i === 'number' ?
                        i : 0;
                };

                for (var i = 3; i <= _lastday; i++) {
                    loop[i] = api
                            .column(i)
                            .data()
                            .reduce(function (a, b) {
                                return intVal(a) + intVal(b);
                            }, 0);
                }

                for (var i = 3; i <= _lastday; i++) {
                    $(api.column(i).footer()).html(loop[i]);
                }
            },
            layout: {
                topStart: 'buttons'
            },
            dom: "B",
            buttons: [
                {
                    extend: 'excel', title: 'DY-FG-PLAN', text: 'Download', className: "btn bg-warning-subtle text-warning fs-3",
                    customize: function (xlsx) {
                        var sheet = xlsx.xl.worksheets['sheet1.xml'];
                        var _lastcolumnindex = '@ViewBag.LastColForExel';
                        var formula_last_col = "";
                        var dividend = _lastcolumnindex;
                        var columnName = "";
                        var modulo;

                        while (dividend > 0) {
                            modulo = (dividend - 1) % 26;
                            columnName = String.fromCharCode(65 + modulo).toString() + columnName;
                            dividend = parseInt((dividend - modulo) / 26);
                        };

                        formula_last_col = 'row c[r^=' + columnName + ']';
                        $(formula_last_col, sheet).each(function () {
                            $(this).attr('s', '2');
                        });
                        $('row:first c', sheet).attr('s', '50');//'50' is for left-aligned text and 52 for -right , 51 - center
                        $('row:first c', sheet).attr('s', '2')
                        $('row:last c', sheet).attr('s', '2');
                        $('row:nth-child(2) c', sheet).attr('s', '2'); // '2' is for bold text
                    }
                }],
            initComplete: function () {
                $('table.dataTable').hide();
            }
        });

        var table = $('#DY-CONSUME-PLAN').DataTable({
            footerCallback: function (row, data, start, end, display) {
                var _lastday = '@ViewBag.LastDay'
                var loop = [];
                var api = this.api();

                var intVal = function (i) {
                    return typeof i === 'string' ?
                        i.replace(/[\$,]/g, '') * 1 :
                        typeof i === 'number' ?
                        i : 0;
                };

                for (var i = 3; i <= _lastday; i++) {
                    loop[i] = api
                            .column(i)
                            .data()
                            .reduce(function (a, b) {
                                return intVal(a) + intVal(b);
                            }, 0);
                }

                for (var i = 3; i <= _lastday; i++) {
                    $(api.column(i).footer()).html(loop[i]);
                }
            },
            layout: {
                topStart: 'buttons'
            },
            dom: "B",
            buttons: [
                {
                    extend: 'excel', title: 'FG-DELIVERY-PLAN', text: 'Download', className: "btn bg-warning-subtle text-warning fs-3",
                    customize: function (xlsx) {
                        var sheet = xlsx.xl.worksheets['sheet1.xml'];
                        var _lastcolumnindex = '@ViewBag.LastColForExel';
                        var formula_last_col = "";
                        var dividend = _lastcolumnindex;
                        var columnName = "";
                        var modulo;

                        while (dividend > 0) {
                            modulo = (dividend - 1) % 26;
                            columnName = String.fromCharCode(65 + modulo).toString() + columnName;
                            dividend = parseInt((dividend - modulo) / 26);
                        };

                        formula_last_col = 'row c[r^=' + columnName + ']';
                        $(formula_last_col, sheet).each(function () {
                            $(this).attr('s', '2');
                        });
                        $('row:first c', sheet).attr('s', '50');//'50' is for left-aligned text and 52 for -right , 51 - center
                        $('row:first c', sheet).attr('s', '2')
                        $('row:last c', sheet).attr('s', '2');
                        $('row:nth-child(2) c', sheet).attr('s', '2'); // '2' is for bold text
                    }
                }],
            initComplete: function () {
                $('table.dataTable').hide();
            }
        });

        var table = $('#RM-WH').DataTable({
            lengthChange: false,
            searching: false,
            order: [[1, 'asc']],
            paging: false,
            info: false,
            fixedColumns: true,
            scrollCollapse: true,
            scrollX: true,
            scrollY: 300,
        });

        var table = $('#RM-CONSUME').DataTable({
            lengthChange: false,
            searching: false,
            order: [[1, 'asc']],
            paging: false,
            info: false,
            fixedColumns: true,
            scrollCollapse: true,
            scrollX: true,
            scrollY: 300,
        });

        var table = $('#SP-WH').DataTable({
            lengthChange: false,
            searching: false,
            order: [[1, 'asc']],
            paging: false,
            info: false,
            fixedColumns: true,
            scrollCollapse: true,
            scrollX: true,
            scrollY: 300,
        });

        var table = $('#SP-CONSUME').DataTable({
            lengthChange: false,
            searching: false,
            order: [[1, 'asc']],
            paging: false,
            info: false,
            fixedColumns: true,
            scrollCollapse: true,
            scrollX: true,
            scrollY: 300,
        });

        var table = $('#DY-WH').DataTable({
            lengthChange: false,
            searching: false,
            order: [[1, 'asc']],
            paging: false,
            info: false,
            fixedColumns: true,
            scrollCollapse: true,
            scrollX: true,
            scrollY: 300,
        });

        var table = $('#DY-CONSUME').DataTable({
            lengthChange: false,
            searching: false,
            order: [[1, 'asc']],
            paging: false,
            info: false,
            fixedColumns: true,
            scrollCollapse: true,
            scrollX: true,
            scrollY: 300,
        });

        var table = $('#WV-WH').DataTable({
            lengthChange: false,
            searching: false,
            order: [[1, 'asc']],
            paging: false,
            info: false,
            fixedColumns: true,
            scrollCollapse: true,
            scrollX: true,
            scrollY: 300,
        });

        var table = $('#WV-CONSUME').DataTable({
            lengthChange: false,
            searching: false,
            order: [[1, 'asc']],
            paging: false,
            info: false,
            fixedColumns: true,
            scrollCollapse: true,
            scrollX: true,
            scrollY: 300,
        });

        //new DataTable('table.display', {
        //    ////layout: {
        //    ////    topEnd: 'buttons'
        //    ////},
        //    ////buttons: [
        //    ////            { extend: 'excel', className: 'btn bg-primary-subtle text-primary' },
        //    ////            { extend: 'pdf', className: 'btn bg-primary-subtle text-primary' },
        //    ////            { extend: 'print', className: 'btn bg-primary-subtle text-primary' },
        //    ////],
        //    //layout: {
        //    //    topEnd: {
        //    //        buttons: [{ extend: 'spacer' , text:'Export : '},
        //    //             { extend: 'spacer' },
        //    //            { extend: 'excel', title: null },
        //    //            { extend: 'spacer' },
        //    //            { extend: 'pdf', title: null },
        //    //            { extend: 'spacer' },
        //    //            { extend: 'print', title: null }]
        //    //    }
        //    //},
        //    lengthChange: false,
        //    searching: false,
        //    order: [[1, 'asc']],
        //    paging: false,
        //    info: false,
        //    fixedColumns: true,
        //    scrollCollapse: true,
        //    scrollX: true,
        //    scrollY: 300,
        //});




        $(document).on('shown.bs.modal', function (e) {
            $($.fn.dataTable.tables(true)).DataTable().columns.adjust();
        });


    </script>

    @RenderSection("scripts", required: false)
</body>
</html>
