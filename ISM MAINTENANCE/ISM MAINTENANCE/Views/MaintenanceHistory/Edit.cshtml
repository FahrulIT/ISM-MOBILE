@model ISM_MAINTENANCE.Models.ViewModel.MaintenanceHistoryHeader

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string tanggal = Model.note_date.ToString("dd-MM-yyyy");
    string Nomor = Model.dept_name + "/" + Model.mc_type + "/" + tanggal + "/" + Model.shift + "/" + Model.machine_no;
    int nomorbaris = 0;
    int nomorbaris2 = 0;   
}

<div class="card">
    @using (Html.BeginForm("Edit", "MaintenanceHistory", FormMethod.Post, new { @class = "", role = "form" }))
    {
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.mc_id)
        @Html.HiddenFor(model => model.dept_id)
        @Html.HiddenFor(model => model.note_date)
        @Html.HiddenFor(model => model.shift)
        @Html.HiddenFor(model => model.loom)
        @Html.HiddenFor(model => model.block)
        @Html.HiddenFor(model => model.mc_type)
        @Html.HiddenFor(model => model.dept_name)
        @Html.HiddenFor(model => model.machine_no)
        @Html.HiddenFor(model => model.stop_from_str)
        @Html.HiddenFor(model => model.TanggalString)
        @Html.HiddenFor(model => model.mtc_start)
        @Html.HiddenFor(model => model.mtc_stop)

        <div class="card-header text-bg-primary">
            <h4 class="mb-0 text-white fs-6">M/C Quality Trouble Maintenance History - @ViewBag.Title</h4>
        </div>

        <div class="card-body">

            <div class="mb-1 row">
                @Html.Label("ID", htmlAttributes: new { @class = "col-md-2 col-form-label" })
                <div class="col-md-10">
                    @Html.TextBox("nomor", Nomor + " => " + "Dept/MC Type/Note Date/shift/Machine Number", new { @class = "form-control text-black gray-color-byfahrul", @readonly = "readonly" })
                </div>
            </div>

            <div class="mb-1 row">
                @Html.LabelFor(model => model.pic_name, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                <div class="col-md-10">
                    @Html.DropDownList("pic_id", null, null, htmlAttributes: new { @class = "form-select text-black gray-color-byfahrul" })
                </div>
            </div>

            <div class="mb-1 row">
                @Html.LabelFor(model => model.mtc_start, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                <div class="col-md-10">
                    @*@Html.TextBoxFor(model => model.mtc_start, "{0:yyyy-MM-dd HH:mm:ss}", new { @class = "form-control text-black", type = "datetime-local" })*@
                    @Html.TextBoxFor(model => model.mtc_start_str, new { @class = "form-control text-black", inputmode = "none", autocomplete = "off" })
                    @Html.ValidationMessageFor(model => model.mtc_start_str, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="mb-1 row">
                @Html.LabelFor(model => model.mtc_stop, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                <div class="col-md-10">
                    @*@Html.TextBoxFor(model => model.mtc_stop, "{0:yyyy-MM-dd HH:mm:ss}", new { @class = "form-control text-black", type = "datetime-local" })*@
                    @Html.TextBoxFor(model => model.mtc_stop_str, new { @class = "form-control text-black", inputmode = "none", autocomplete = "off" })
                    @Html.ValidationMessageFor(model => model.mtc_stop_str, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="mb-1 row">
                @Html.LabelFor(model => model.finish_sts, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                <div class="form-check col-md-2">
                    @if (Model.finish_sts.Trim() == "Finish")
                    {
                        @Html.RadioButtonFor(model => model.finish_sts, "F", new { @checked = "checked", @class = "col-form-label me-2", @value = "F" })
                    }
                    else
                    {
                        @Html.RadioButtonFor(model => model.finish_sts, "F", new { @class = "col-form-label me-2" })
                    }

                    @Html.Label("Finished", "Finish", htmlAttributes: new { @class = "col-form-label" })
                </div>
                <div class="form-check col-md-5">
                    @if (Model.finish_sts.Trim() == "Not Finish")
                    {
                        @Html.RadioButtonFor(model => model.finish_sts, "-", new { @checked = "checked", @class = "col-form-label me-2" })
                    }
                    else
                    {
                        @Html.RadioButtonFor(model => model.finish_sts, "-", new { @class = "col-form-label me-2" })
                    }

                    @Html.Label("Not Finish", "Not Finish", htmlAttributes: new { @class = "col-form-label" })
                </div>
            </div>


            <br />
            <br />
            <div class="col-md-4 col-xl-3">
                <button type="button" class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#MaintenanceActionModal">
                    Maintenance Action - Detail
                </button>
            </div>
            <br />

            <div class="table-responsive-sm">
                <table id="MaintenanceActionDetailTable_edit" class="table table-sm-customByFahrul align-middle text-nowrap mb-0">
                    <thead class="header-item">
                        <tr>
                            <th>
                                No
                            </th>

                            <th>
                                MTC Type
                            </th>

                            <th>
                                Trouble Name
                            </th>
                            <th>
                                Maintenance Action
                            </th>
                            <th>Action</th>
                            <th style="display:none"></th>
                            <th style="display:none"></th>
                            <th style="display:none"></th>
                        </tr>
                    </thead>

                    <tbody>
                        @*@foreach (var item in Model.Detail_1)
                            {
                                <tr>
                                    <td style="text-align:center">
                                        @(nomorbaris += 1)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.mtc_type)
                                    </td>

                                    <td>
                                        @Html.DisplayFor(modelItem => item.trouble_name)
                                    </td>

                                    <td>
                                        @Html.DisplayFor(modelItem => item.mtc_action_name)
                                    </td>
                                    <td>
                                        <button class="btn btn-danger" onclick="return this.parentNode.parentNode.remove();">delete</button>
                                    </td>
                                </tr>
                            }*@

                        @for (int i = 0; i < Model.Detail_1.Count; i++)
                        {
                            <tr>
                                <td style="text-align:center">
                                    <input type="hidden" name="Index" value="B-" + @i />
                                    @(nomorbaris += 1)
                                </td>
                                <td>
                                    @(Model.Detail_1[i].mtc_type)
                                    @Html.EditorFor(modelItem => modelItem.Detail_1[i].mtc_type, new { htmlAttributes = new { @class = "form-control form-control-sm text-black", @readonly = "readonly", @type = "hidden" } })
                                </td>
                                <td>
                                    @(Model.Detail_1[i].trouble_name)
                                    @Html.EditorFor(modelItem => modelItem.Detail_1[i].trouble_name, new { htmlAttributes = new { @class = "form-control form-control-sm text-black", @readonly = "readonly", @type = "hidden" } })
                                </td>

                                <td>
                                    @(Model.Detail_1[i].mtc_action_name)
                                    @Html.EditorFor(modelItem => modelItem.Detail_1[i].mtc_action_name, new { htmlAttributes = new { @class = "form-control form-control-sm text-black", @readonly = "readonly", @type = "hidden" } })
                                </td>

                                <td style="display:none">
                                    @Html.EditorFor(modelItem => modelItem.Detail_1[i].mtc_id, new { htmlAttributes = new { @class = "form-control form-control-sm text-black", @type = "hidden" } })
                                </td>
                                <td style="display:none">
                                    @Html.EditorFor(modelItem => modelItem.Detail_1[i].trouble_id, new { htmlAttributes = new { @class = "form-control form-control-sm text-black", @type = "hidden" } })
                                </td>
                                <td style="display:none">
                                    @Html.EditorFor(modelItem => modelItem.Detail_1[i].mtc_action_id, new { htmlAttributes = new { @class = "form-control form-control-sm text-black", @type = "hidden" } })
                                </td>
                                <td>
                                    <button class="btn btn-danger" id="RemoveRow_mtc_action">delete</button>
                                </td>

                            </tr>
                        }

                    </tbody>
                </table>

            </div>
            <br />
            @*id="OpenModal_SparePart"*@
            <div class="col-md-4 col-xl-3">
                <button type="button" class="btn btn-outline-primary" id="OpenModal_SparePart" data-bs-toggle="modal" data-bs-target="#SparepartModal">
                    Spare Part - Detail
                </button>
            </div>
            <br />

            <div class="table-responsive">
                <table id="SparepareDetailTable_edit" class="table table-sm-customByFahrul align-middle text-nowrap mb-0">
                    <thead class="header-item">
                        <tr>
                            <th>
                                No
                            </th>

                            <th>
                                Spare Part
                            </th>

                            <th>
                                Unit Price (USD)
                            </th>

                            <th>
                                Qty
                            </th>
                            <th style="display:none">ItemCode</th>
                            <th>
                                Action
                            </th>

                        </tr>
                    </thead>

                    <tbody>
                        @if (Model.Detail_2 != null)
                        {
                            for (int i = 0; i < Model.Detail_2.Count; i++)
                            {
                                <tr>
                                    <td style="text-align:center">
                                        @(nomorbaris2 += 1)
                                    </td>
                                    <td>
                                        @(Model.Detail_2[i].item_name)
                                        @Html.EditorFor(modelItem => modelItem.Detail_2[i].item_name, new { htmlAttributes = new { @class = "form-control form-control-sm", @readonly = "readonly", @type = "hidden" } })

                                        @*@Html.DisplayFor(modelItem => item.item_name)*@
                                    </td>

                                    <td>
                                        @(Model.Detail_2[i].price)
                                        @Html.EditorFor(modelItem => modelItem.Detail_2[i].price, "{0:0.00}", new { htmlAttributes = new { @class = "form-control form-control-sm", @readonly = "readonly", @type = "hidden" } })

                                        @*@Html.DisplayFor(modelItem => item.price)*@
                                    </td>

                                    <td>
                                        @(Model.Detail_2[i].quantity)
                                        @Html.EditorFor(modelItem => modelItem.Detail_2[i].quantity, "{0:0.00}", new { htmlAttributes = new { @class = "form-control form-control-sm", @readonly = "readonly", @type = "hidden" } })

                                        @*@Html.DisplayFor(modelItem => item.quantity)*@
                                    </td>
                                    <td style="display:none">
                                        @(Model.Detail_2[i].item_code)
                                        @Html.EditorFor(modelItem => modelItem.Detail_2[i].item_code, new { htmlAttributes = new { @class = "form-control form-control-sm", @readonly = "readonly", @type = "hidden" } })
                                    </td>

                                    <td>
                                        <button class="btn btn-danger" onclick="return this.parentNode.parentNode.remove();">delete</button>
                                    </td>
                                </tr>
                            }

                        }
                    </tbody>
                </table>

            </div>



        </div>

        <div class="card-footer">
            <button type="submit" class="btn btn-primary">Save</button>
            @Html.ActionLink("Back", "Index", "MaintenanceHistory", null, new { @class = "btn bg-danger-subtle text-danger ms-6" })
        </div>
    }
</div>

<!-- Maintenance Action Modal -->
<div class="modal fade" id="MaintenanceActionModal" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">

            <div class="modal-header text-center" style="border-bottom:2px solid; border-bottom-color: rgba(165, 173, 179, 0.3);">
                <h5 class="modal-title text-black fw-bold" id="exampleModalLabel">Get Maintenance Action</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <div class="modal-body">
                @*<div class="card-body m-2">*@
                <div class="table-responsive">
                    <table id="MaintenanceActionTableModal_edit" class="table table-sm text-nowrap">
                        <thead>
                            <!-- start row -->
                            <tr>
                                @*<th scope="col">Select</th>*@
                                <th></th>
                                <th scope="col">Mtc Type</th>
                                <th scope="col">Trouble Name</th>
                                <th scope="col">Maintenance Action</th>
                                <th style="display:none">MTC ID</th>
                                <th style="display:none">Trouble ID</th>
                                <th style="display:none">MTC Action ID</th>
                                <th style="display:none">Loom</th>
                                <th style="display:none">block</th>
                                <th style="display:none">shift</th>
                                <th style="display:none">note date</th>

                            </tr>
                            <!-- end row -->
                        </thead>
                        <tbody>
                            <!-- start row -->
                            @if (ViewBag.Detil_mtc_action == null)
                            {
                            <tr>
                                <th scope="row">-</th>
                                <td>-</td>
                                <td>-</td>
                                <td>-</td>
                                <td>-</td>
                                <td>-</td>
                                <td>-</td>
                                <td>-</td>
                                <td>-</td>
                                <td>-</td>
                                <td>-</td>
                                <td>-</td>
                            </tr>
                            }
                            else
                            {
                                foreach (var data in ViewBag.Detil_mtc_action)
                                {
                            <tr>
                                <td></td>
                                <td>@data.mtc_type.ToString() </td>
                                <td>@data.trouble_name.ToString()</td>
                                <td>@data.mtc_action_name.ToString()</td>
                                <td style="display:none">@data.mtc_id.ToString()</td>
                                <td style="display:none">@data.trouble_id.ToString()</td>
                                <td style="display:none">@data.mtc_action_id.ToString()</td>
                                <td style="display:none">@data.loom.ToString()</td>
                                <td style="display:none">@data.block.ToString()</td>
                                <td style="display:none">@data.shift.ToString()</td>
                                <td style="display:none">@data.note_date.ToString("dd-MM-yyyy")</td>

                            </tr>
                                }
                            }
                            <!-- end row -->
                        </tbody>

                    </table>
                </div>
                <!--</div>-->
            </div>


            <div class="modal-footer justify-content-start">
                <button type="button" class="btn btn-primary" id="GetSelectedMaintenanceAction_edit"><span class="fa fa-save"></span> Get</button>
                <button type="button" class="btn btn-danger" data-bs-dismiss="modal" id="Back"><span class="fa fa-eject"></span> Back</button>
            </div>
        </div>
    </div>
</div>
<!-- Maintenance Action Modal -->
<!-- Sparepart Modal -->
<div class="modal fade" id="SparepartModal" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <form id="details3ModalForm">
                <div class="modal-header text-center" style="border-bottom:2px solid; border-bottom-color: rgba(165, 173, 179, 0.3);">
                    <h5 class="modal-title text-black fw-bold" id="exampleModalLabel">Add Item</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>

                <div class="modal-body">
                    <div class="mb-3 row">
                        @Html.Label("Sparepart", "Sparepart", htmlAttributes: new { @class = "col-md-3 col-form-label mx-2" })
                        <div class="col-md-8">
                            @Html.DropDownList("SapItem", null, new { @class = "form-select" })
                        </div>
                    </div>

                    <div class="mb-3 row">
                        @Html.Label("Unit price", "Unit price", htmlAttributes: new { @class = "col-md-3 col-form-label mx-2" })
                        <div class="col-md-8">
                            @Html.TextBox("UnitPrice", "", new { @class = "form-control", @id = "UnitPrice", @readonly = "readonly" })
                        </div>
                    </div>

                    <div class="mb-3 row">
                        @Html.Label("Quantity", "Quantity", htmlAttributes: new { @class = "col-md-3 col-form-label mx-2" })
                        <div class="col-md-8">
                            @Html.TextBox("Quantity", "", new { @class = "form-control" })
                        </div>
                    </div>

                </div>

                <div class="modal-footer justify-content-start">
                    <button type="button" class="btn btn-primary" id="GetSparepartModal_edit"><span class="fa fa-save"></span> Get</button>
                    <button type="button" class="btn btn-danger" data-bs-dismiss="modal" id="Back"><span class="fa fa-eject"></span> Back</button>
                </div>
            </form>
        </div>
    </div>
</div>
<!-- Sparepart Modal -->

<script src="~/Content/libs/jquery/dist/jquery.js"></script>
<link href="~/Content/css/select2.min.css" rel="stylesheet" />
<script src="~/Content/libs/Select2/select2.min.js"></script>

<link href="~/Content/css/jquery.datetimepicker.css" rel="stylesheet" />
<script src="~/Content/js/jquery.datetimepicker.full.js"></script>

<script type="text/javascript">
    //$("#SapItem").select2({ width: '100%', dropdownParent: $("#SparepartModal") });
    $("#SapItem").select2({
        allowClear: true,
        placeholder: {
            id: "0",
            text: "SELECT ITEM"
        }, width: '100%', dropdownParent: $("#SparepartModal") });

    $('#SapItem').on('select2:select', function (e) {
        var data = e.params.data;
        var itemlist = @Html.Raw(Json.Encode(ViewBag.SapItemWithPrice));
        var Item = itemlist.filter(x=> x.ItemCode == data.id);
        var ItemPrice = parseFloat(Item[0].Price);
        //console.log(Item);
        $('#UnitPrice').val(ItemPrice.toFixed(2));
    });

    @*var _mtc_start = '@Model.mtc_start.ToString("yyyy-MM-dd HH:mm")';
    var _mtc_start_str = new Date(_mtc_start);

    var _mtc_stop ='@(Model.mtc_stop.HasValue ? Model.mtc_stop.Value.ToString("yyyy-MM-dd HH:mm"):"")';
    var _mtc_stop_str = new Date(_mtc_stop)

    console.log(_mtc_stop);
    console.log(_mtc_stop_str);*@

    $('#mtc_start_str').datetimepicker({
        format:'d-m-Y H:i',
        timepicker:true,
        datepicker:true,
        //value:_mtc_start_str
    });

    $('#mtc_stop_str').datetimepicker({
        format:'d-m-Y H:i',
        timepicker:true,
        datepicker:true,
        //value: isNaN(_mtc_stop_str)? '' : _mtc_stop_str
    });


    let counter = 0;
    $(document).ready(function () {
        var table_modal_mtc_action_edit = $('#MaintenanceActionTableModal_edit').DataTable({
            info: false,
            lengthChange: false,
            columnDefs: [
                {
                    orderable: false,
                    render: DataTable.render.select(),
                    targets: 0
                }
            ],
            //scrollX: true,
            select: {
                style: 'multi',
                //selector: 'td:third-child', //menentukan kolom mana yg harus diklik
                headerCheckbox: true
            },
            order: [[1, 'asc']]
        });

        $("#GetSelectedMaintenanceAction_edit").click(function () {
            counter = $('#MaintenanceActionDetailTable_edit tr').length;
            var selData = table_modal_mtc_action_edit.rows(".selected").data();
            console.log(selData);

            for (var i = 0; i < selData.length; i++) {
                //console.log(selData[i][0]);
                //console.log(selData[i][1]);
                //console.log(selData[i][2]);
                //console.log(selData[i][3]);
                var duplicate = ""

                if (selData[i][3] == "BELUM DI REGISTER") {
                    continue;
                }

                $('#MaintenanceActionDetailTable_edit tbody tr').each(function () {

                    var cell1Value = $(this).find("td").eq(1).find("input").val();
                    var cell2Value = $(this).find("td").eq(2).find("input").val();
                    var cell3Value = $(this).find("td").eq(3).find("input").val();
                    //console.log(cellValue);
                    //console.log("tes");
                    if (cell1Value == selData[i][1] && cell2Value == selData[i][2] && cell3Value == selData[i][3]) {
                        duplicate = "true";
                    }

                });

                if (duplicate == "true") {
                    alert("duplicate data");
                    //console.log("tes");
                }
                else
                {
                    let list = '<tr><td style="text-align:center" class="text-black">' + (counter) + '</td>';
                    list += '<td  class="text-black">' + selData[i][1] + '<input class = "form-control form-control-sm text-box single-line" readonly = "readonly" type="hidden" name="Detail_1' + '[' + String(counter - 1) + '].mtc_type" value=" ' + selData[i][1] + ' "/>' + '</td>';
                    list += '<td  class="text-black">' + selData[i][2] + '<input class = "form-control form-control-sm text-box single-line" readonly = "readonly" type="hidden" name="Detail_1' + '[' + String(counter - 1) + '].trouble_name" value=" ' + selData[i][2] + ' "/>' + '</td>';
                    list += '<td  class="text-black">' + selData[i][3] + '<input class = "form-control form-control-sm text-box single-line" readonly = "readonly" type="hidden" name="Detail_1' + '[' + String(counter - 1) + '].mtc_action_name" value=" ' + selData[i][3] + ' "/>' + '</td>';
                    list += '<td style="display:none">' + selData[i][4] + '<input class = "form-control form-control-sm" readonly = "readonly" type="hidden" name="Detail_1' + '[' + String(counter - 1) + '].mtc_id" value=" ' + selData[i][4] + ' "/>' + '</td>';
                    list += '<td style="display:none">' + selData[i][5] + '<input class = "form-control form-control-sm" readonly = "readonly" type="hidden" name="Detail_1' + '[' + String(counter - 1) + '].trouble_id" value=" ' + selData[i][5] + ' "/>' + '</td>';
                    list += '<td style="display:none">' + selData[i][6] + '<input class = "form-control form-control-sm" readonly = "readonly" type="hidden" name="Detail_1' + '[' + String(counter - 1) + '].mtc_action_id" value=" ' + selData[i][6] + ' "/>' + '</td>';
                    list += '<td><button class="btn btn-danger" id="RemoveRow_mtc_action">delete</button></tr>';

                    $('#MaintenanceActionDetailTable_edit tbody').append(list);
                    counter +=1;
                }

            }
        });


        $("#GetSparepartModal_edit").click(function () {
            counter = $('#SparepareDetailTable_edit tr').length;

            var Itemcode = $('#SapItem').val();
            var Itemname = $('#SapItem :selected').text();
            var price = $('#UnitPrice').val();
            var qty = $('#Quantity').val();

            var Decimal = new RegExp(/^\d+(\.\d+)+$/g);
            var NonDecimal = new RegExp(/^[0-9]+$/g);
            let CheckFormatNumber = "";

            console.log(price);
            if (Decimal.test(qty) || NonDecimal.test(qty)) {
            }else{
                CheckFormatNumber = "tidak sesuai";
                alert("Format Qty : 1.00 (decimal) atau 10 (bulat)");
            }

            Decimal = new RegExp(/^\d+(\.\d+)+$/g);
            NonDecimal = new RegExp(/^[0-9]+$/g);

            if (Decimal.test(price) || NonDecimal.test(price)){
            }else{
                CheckFormatNumber = "tidak sesuai";
                alert("Format Price : 1.00 (decimal) atau 1 (bulat)");
            }


            if (CheckFormatNumber == ""){
                //console.log(pilih);
                let list = '<tr><td style="text-align:center">' + (counter) + '</td>';

                list += '<td class="text-black">' + Itemname + '<input class = "form-control form-control-sm text-box single-line" readonly = "readonly" type="hidden" name="Detail_2' + '[' + String(counter-1) + '].item_name" value="' + Itemname + '"/>' + '</td>';
                list += '<td class="text-black">' + price + '<input class = "form-control form-control-sm text-box single-line" readonly = "readonly" type="hidden" name="Detail_2' + '[' + String(counter-1) + '].price" value="' + price + '"/>' + '</td>';
                list += '<td class="text-black">' + qty + '<input class = "form-control form-control-sm text-box single-line" readonly = "readonly" type="hidden" name="Detail_2' + '[' + String(counter-1) + '].quantity" value="' + qty + '"/>' + '</td>';
                list += '<td style="display:none">' + Itemcode + '<input class = "form-control form-control-sm text-box single-line" type="hidden" name="Detail_2' + '[' + String(counter-1) + '].item_code" value="' + Itemcode + '"/>' + '</td>';
                list += '<td><button class="btn btn-danger" onclick="return this.parentNode.parentNode.remove();">delete</button></tr>';

                $('#SparepareDetailTable_edit tbody').append(list);
                counter = 0
            }
        });

        $(document).on('click', '#RemoveRow_mtc_action', function (e) {
            e.preventDefault();
            counter = $('#MaintenanceActionDetailTable_edit tr').length;
            if ($('#MaintenanceActionDetailTable_edit>tbody>tr').length > 1) {
                $(this).parent().parent().remove();
                //$(this).closest('tr').remove();
                numberRows($('#MaintenanceActionDetailTable_edit tbody'));
                counter = counter - 1;
                return false;
            }
            else {
                //$(this).parent().parent().show();
                alert('Form must have at least one row')
                numberRows($('#MaintenanceActionDetailTable_edit tbody'));
            }
        });

        function numberRows($t) {
            $t.find("tr").each(function (i, el) {
                $(el).find("td").eq(0).html((i + 1));
                $(el).find("td").eq(1).find("input").prop("name", "Detail_1[" + i + "].mtc_type");
                $(el).find("td").eq(2).find("input").prop("name", "Detail_1[" + i + "].trouble_name");
                $(el).find("td").eq(3).find("input").prop("name", "Detail_1[" + i + "].mtc_action_name");
                $(el).find("td").eq(4).find("input").prop("name", "Detail_1[" + i + "].mtc_id");
                $(el).find("td").eq(5).find("input").prop("name", "Detail_1[" + i + "].trouble_id");
                $(el).find("td").eq(6).find("input").prop("name", "Detail_1[" + i + "].mtc_action_id");
            });

            //$t.find("tr").each(function (i, el) {
            //    $(el).find("td").eq(0).html((i + 1));
            //    $(el).find("td").eq(1).find("input").prop("name", "[" + i + "].dept_id");
            //});
        }

    });



</script>